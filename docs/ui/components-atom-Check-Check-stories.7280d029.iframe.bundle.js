/*! For license information please see components-atom-Check-Check-stories.7280d029.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_a_esports_ui=self.webpackChunk_a_esports_ui||[]).push([[295],{"../shadcn-ui/src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/tailwind-merge@3.0.2/node_modules/tailwind-merge/dist/bundle-mjs.mjs");function cn(...inputs){return(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))}},"../util/src/storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{HX:()=>getArgType,bQ:()=>getParameters,dG:()=>SubCategory});var SubCategory=function(SubCategory){return SubCategory.PROP="Property",SubCategory.EV="Event",SubCategory}({});function getArgType(arg,category){switch(arg){case"children":return{control:{disable:!0},description:"자식 노드",table:{category,subcategory:"Property",type:{summary:"React.ReactNode"}}};case"className":return{control:{disable:!0},description:"클래스",table:{category,subcategory:"Property"},type:"string"};default:return{control:{disable:!0},description:"태그 고유 ID",table:{category,subcategory:"Property"},type:"string"}}}function getParameters(subtitle,body,parameters){return{...parameters,componentSubtitle:subtitle,docs:{description:{component:Array.isArray(body)?body.join("<br />"):body}}}}},"./src/components/atom/Check/Check.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Playground:()=>Playground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Check_stories});var storybook=__webpack_require__("../util/src/storybook.ts"),jsx_runtime=__webpack_require__("../../node_modules/.pnpm/next@15.2.1_@babel+core@7.26.9_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/.pnpm/next@15.2.1_@babel+core@7.26.9_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js");function setRef(ref,value){if("function"==typeof ref)return ref(value);null!=ref&&(ref.current=value)}function composeRefs(...refs){return node=>{let hasCleanup=!1;const cleanups=refs.map((ref=>{const cleanup=setRef(ref,node);return hasCleanup||"function"!=typeof cleanup||(hasCleanup=!0),cleanup}));if(hasCleanup)return()=>{for(let i=0;i<cleanups.length;i++){const cleanup=cleanups[i];"function"==typeof cleanup?cleanup():setRef(refs[i],null)}}}}function useComposedRefs(...refs){return react.useCallback(composeRefs(...refs),refs)}function composeContextScopes(...scopes){const baseScope=scopes[0];if(1===scopes.length)return baseScope;const createScope=()=>{const scopeHooks=scopes.map((createScope2=>({useScope:createScope2(),scopeName:createScope2.scopeName})));return function useComposedScopes(overrideScopes){const nextScopes=scopeHooks.reduce(((nextScopes2,{useScope,scopeName})=>({...nextScopes2,...useScope(overrideScopes)[`__scope${scopeName}`]})),{});return react.useMemo((()=>({[`__scope${baseScope.scopeName}`]:nextScopes})),[nextScopes])}};return createScope.scopeName=baseScope.scopeName,createScope}function composeEventHandlers(originalEventHandler,ourEventHandler,{checkForDefaultPrevented=!0}={}){return function handleEvent(event){if(originalEventHandler?.(event),!1===checkForDefaultPrevented||!event.defaultPrevented)return ourEventHandler?.(event)}}function useCallbackRef(callback){const callbackRef=react.useRef(callback);return react.useEffect((()=>{callbackRef.current=callback})),react.useMemo((()=>(...args)=>callbackRef.current?.(...args)),[])}function useControllableState({prop,defaultProp,onChange=()=>{}}){const[uncontrolledProp,setUncontrolledProp]=function useUncontrolledState({defaultProp,onChange}){const uncontrolledState=react.useState(defaultProp),[value]=uncontrolledState,prevValueRef=react.useRef(value),handleChange=useCallbackRef(onChange);return react.useEffect((()=>{prevValueRef.current!==value&&(handleChange(value),prevValueRef.current=value)}),[value,prevValueRef,handleChange]),uncontrolledState}({defaultProp,onChange}),isControlled=void 0!==prop,value=isControlled?prop:uncontrolledProp,handleChange=useCallbackRef(onChange);return[value,react.useCallback((nextValue=>{if(isControlled){const value2="function"==typeof nextValue?nextValue(prop):nextValue;value2!==prop&&handleChange(value2)}else setUncontrolledProp(nextValue)}),[isControlled,prop,setUncontrolledProp,handleChange])]}var useLayoutEffect2=Boolean(globalThis?.document)?react.useLayoutEffect:()=>{};var Presence=props=>{const{present,children}=props,presence=function usePresence(present){const[node,setNode]=react.useState(),stylesRef=react.useRef({}),prevPresentRef=react.useRef(present),prevAnimationNameRef=react.useRef("none"),initialState=present?"mounted":"unmounted",[state,send]=function useStateMachine(initialState,machine){return react.useReducer(((state,event)=>machine[state][event]??state),initialState)}(initialState,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return react.useEffect((()=>{const currentAnimationName=getAnimationName(stylesRef.current);prevAnimationNameRef.current="mounted"===state?currentAnimationName:"none"}),[state]),useLayoutEffect2((()=>{const styles=stylesRef.current,wasPresent=prevPresentRef.current;if(wasPresent!==present){const prevAnimationName=prevAnimationNameRef.current,currentAnimationName=getAnimationName(styles);if(present)send("MOUNT");else if("none"===currentAnimationName||"none"===styles?.display)send("UNMOUNT");else{send(wasPresent&&prevAnimationName!==currentAnimationName?"ANIMATION_OUT":"UNMOUNT")}prevPresentRef.current=present}}),[present,send]),useLayoutEffect2((()=>{if(node){let timeoutId;const ownerWindow=node.ownerDocument.defaultView??window,handleAnimationEnd=event=>{const isCurrentAnimation=getAnimationName(stylesRef.current).includes(event.animationName);if(event.target===node&&isCurrentAnimation&&(send("ANIMATION_END"),!prevPresentRef.current)){const currentFillMode=node.style.animationFillMode;node.style.animationFillMode="forwards",timeoutId=ownerWindow.setTimeout((()=>{"forwards"===node.style.animationFillMode&&(node.style.animationFillMode=currentFillMode)}))}},handleAnimationStart=event=>{event.target===node&&(prevAnimationNameRef.current=getAnimationName(stylesRef.current))};return node.addEventListener("animationstart",handleAnimationStart),node.addEventListener("animationcancel",handleAnimationEnd),node.addEventListener("animationend",handleAnimationEnd),()=>{ownerWindow.clearTimeout(timeoutId),node.removeEventListener("animationstart",handleAnimationStart),node.removeEventListener("animationcancel",handleAnimationEnd),node.removeEventListener("animationend",handleAnimationEnd)}}send("ANIMATION_END")}),[node,send]),{isPresent:["mounted","unmountSuspended"].includes(state),ref:react.useCallback((node2=>{node2&&(stylesRef.current=getComputedStyle(node2)),setNode(node2)}),[])}}(present),child="function"==typeof children?children({present:presence.isPresent}):react.Children.only(children),ref=useComposedRefs(presence.ref,function getElementRef(element){let getter=Object.getOwnPropertyDescriptor(element.props,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning;if(mayWarn)return element.ref;if(getter=Object.getOwnPropertyDescriptor(element,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning,mayWarn)return element.props.ref;return element.props.ref||element.ref}(child));return"function"==typeof children||presence.isPresent?react.cloneElement(child,{ref}):null};function getAnimationName(styles){return styles?.animationName||"none"}Presence.displayName="Presence";__webpack_require__("../../node_modules/.pnpm/next@15.2.1_@babel+core@7.26.9_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react-dom/index.js");var Slot=react.forwardRef(((props,forwardedRef)=>{const{children,...slotProps}=props,childrenArray=react.Children.toArray(children),slottable=childrenArray.find(isSlottable);if(slottable){const newElement=slottable.props.children,newChildren=childrenArray.map((child=>child===slottable?react.Children.count(newElement)>1?react.Children.only(null):react.isValidElement(newElement)?newElement.props.children:null:child));return(0,jsx_runtime.jsx)(SlotClone,{...slotProps,ref:forwardedRef,children:react.isValidElement(newElement)?react.cloneElement(newElement,void 0,newChildren):null})}return(0,jsx_runtime.jsx)(SlotClone,{...slotProps,ref:forwardedRef,children})}));Slot.displayName="Slot";var SlotClone=react.forwardRef(((props,forwardedRef)=>{const{children,...slotProps}=props;if(react.isValidElement(children)){const childrenRef=function dist_getElementRef(element){let getter=Object.getOwnPropertyDescriptor(element.props,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning;if(mayWarn)return element.ref;if(getter=Object.getOwnPropertyDescriptor(element,"ref")?.get,mayWarn=getter&&"isReactWarning"in getter&&getter.isReactWarning,mayWarn)return element.props.ref;return element.props.ref||element.ref}(children),props2=function mergeProps(slotProps,childProps){const overrideProps={...childProps};for(const propName in childProps){const slotPropValue=slotProps[propName],childPropValue=childProps[propName];/^on[A-Z]/.test(propName)?slotPropValue&&childPropValue?overrideProps[propName]=(...args)=>{childPropValue(...args),slotPropValue(...args)}:slotPropValue&&(overrideProps[propName]=slotPropValue):"style"===propName?overrideProps[propName]={...slotPropValue,...childPropValue}:"className"===propName&&(overrideProps[propName]=[slotPropValue,childPropValue].filter(Boolean).join(" "))}return{...slotProps,...overrideProps}}(slotProps,children.props);return children.type!==react.Fragment&&(props2.ref=forwardedRef?composeRefs(forwardedRef,childrenRef):childrenRef),react.cloneElement(children,props2)}return react.Children.count(children)>1?react.Children.only(null):null}));SlotClone.displayName="SlotClone";var Slottable=({children})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children});function isSlottable(child){return react.isValidElement(child)&&child.type===Slottable}var Primitive=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce(((primitive,node)=>{const Node=react.forwardRef(((props,forwardedRef)=>{const{asChild,...primitiveProps}=props,Comp=asChild?Slot:node;return"undefined"!=typeof window&&(window[Symbol.for("radix-ui")]=!0),(0,jsx_runtime.jsx)(Comp,{...primitiveProps,ref:forwardedRef})}));return Node.displayName=`Primitive.${node}`,{...primitive,[node]:Node}}),{});var[createCheckboxContext,createCheckboxScope]=function createContextScope(scopeName,createContextScopeDeps=[]){let defaultContexts=[];const createScope=()=>{const scopeContexts=defaultContexts.map((defaultContext=>react.createContext(defaultContext)));return function useScope(scope){const contexts=scope?.[scopeName]||scopeContexts;return react.useMemo((()=>({[`__scope${scopeName}`]:{...scope,[scopeName]:contexts}})),[scope,contexts])}};return createScope.scopeName=scopeName,[function createContext3(rootComponentName,defaultContext){const BaseContext=react.createContext(defaultContext),index=defaultContexts.length;defaultContexts=[...defaultContexts,defaultContext];const Provider=props=>{const{scope,children,...context}=props,Context=scope?.[scopeName]?.[index]||BaseContext,value=react.useMemo((()=>context),Object.values(context));return(0,jsx_runtime.jsx)(Context.Provider,{value,children})};return Provider.displayName=rootComponentName+"Provider",[Provider,function useContext2(consumerName,scope){const Context=scope?.[scopeName]?.[index]||BaseContext,context=react.useContext(Context);if(context)return context;if(void 0!==defaultContext)return defaultContext;throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``)}]},composeContextScopes(createScope,...createContextScopeDeps)]}("Checkbox"),[CheckboxProvider,useCheckboxContext]=createCheckboxContext("Checkbox"),Checkbox=react.forwardRef(((props,forwardedRef)=>{const{__scopeCheckbox,name,checked:checkedProp,defaultChecked,required,disabled,value="on",onCheckedChange,form,...checkboxProps}=props,[button,setButton]=react.useState(null),composedRefs=useComposedRefs(forwardedRef,(node=>setButton(node))),hasConsumerStoppedPropagationRef=react.useRef(!1),isFormControl=!button||(form||!!button.closest("form")),[checked=!1,setChecked]=useControllableState({prop:checkedProp,defaultProp:defaultChecked,onChange:onCheckedChange}),initialCheckedStateRef=react.useRef(checked);return react.useEffect((()=>{const form2=button?.form;if(form2){const reset=()=>setChecked(initialCheckedStateRef.current);return form2.addEventListener("reset",reset),()=>form2.removeEventListener("reset",reset)}}),[button,setChecked]),(0,jsx_runtime.jsxs)(CheckboxProvider,{scope:__scopeCheckbox,state:checked,disabled,children:[(0,jsx_runtime.jsx)(Primitive.button,{type:"button",role:"checkbox","aria-checked":isIndeterminate(checked)?"mixed":checked,"aria-required":required,"data-state":getState(checked),"data-disabled":disabled?"":void 0,disabled,value,...checkboxProps,ref:composedRefs,onKeyDown:composeEventHandlers(props.onKeyDown,(event=>{"Enter"===event.key&&event.preventDefault()})),onClick:composeEventHandlers(props.onClick,(event=>{setChecked((prevChecked=>!!isIndeterminate(prevChecked)||!prevChecked)),isFormControl&&(hasConsumerStoppedPropagationRef.current=event.isPropagationStopped(),hasConsumerStoppedPropagationRef.current||event.stopPropagation())}))}),isFormControl&&(0,jsx_runtime.jsx)(BubbleInput,{control:button,bubbles:!hasConsumerStoppedPropagationRef.current,name,value,checked,required,disabled,form,style:{transform:"translateX(-100%)"},defaultChecked:!isIndeterminate(defaultChecked)&&defaultChecked})]})}));Checkbox.displayName="Checkbox";var CheckboxIndicator=react.forwardRef(((props,forwardedRef)=>{const{__scopeCheckbox,forceMount,...indicatorProps}=props,context=useCheckboxContext("CheckboxIndicator",__scopeCheckbox);return(0,jsx_runtime.jsx)(Presence,{present:forceMount||isIndeterminate(context.state)||!0===context.state,children:(0,jsx_runtime.jsx)(Primitive.span,{"data-state":getState(context.state),"data-disabled":context.disabled?"":void 0,...indicatorProps,ref:forwardedRef,style:{pointerEvents:"none",...props.style}})})}));CheckboxIndicator.displayName="CheckboxIndicator";var BubbleInput=props=>{const{control,checked,bubbles=!0,defaultChecked,...inputProps}=props,ref=react.useRef(null),prevChecked=function usePrevious(value){const ref=react.useRef({value,previous:value});return react.useMemo((()=>(ref.current.value!==value&&(ref.current.previous=ref.current.value,ref.current.value=value),ref.current.previous)),[value])}(checked),controlSize=function useSize(element){const[size,setSize]=react.useState(void 0);return useLayoutEffect2((()=>{if(element){setSize({width:element.offsetWidth,height:element.offsetHeight});const resizeObserver=new ResizeObserver((entries=>{if(!Array.isArray(entries))return;if(!entries.length)return;const entry=entries[0];let width,height;if("borderBoxSize"in entry){const borderSizeEntry=entry.borderBoxSize,borderSize=Array.isArray(borderSizeEntry)?borderSizeEntry[0]:borderSizeEntry;width=borderSize.inlineSize,height=borderSize.blockSize}else width=element.offsetWidth,height=element.offsetHeight;setSize({width,height})}));return resizeObserver.observe(element,{box:"border-box"}),()=>resizeObserver.unobserve(element)}setSize(void 0)}),[element]),size}(control);react.useEffect((()=>{const input=ref.current,inputProto=window.HTMLInputElement.prototype,setChecked=Object.getOwnPropertyDescriptor(inputProto,"checked").set;if(prevChecked!==checked&&setChecked){const event=new Event("click",{bubbles});input.indeterminate=isIndeterminate(checked),setChecked.call(input,!isIndeterminate(checked)&&checked),input.dispatchEvent(event)}}),[prevChecked,checked,bubbles]);const defaultCheckedRef=react.useRef(!isIndeterminate(checked)&&checked);return(0,jsx_runtime.jsx)("input",{type:"checkbox","aria-hidden":!0,defaultChecked:defaultChecked??defaultCheckedRef.current,...inputProps,tabIndex:-1,ref,style:{...props.style,...controlSize,position:"absolute",pointerEvents:"none",opacity:0,margin:0}})};function isIndeterminate(checked){return"indeterminate"===checked}function getState(checked){return isIndeterminate(checked)?"indeterminate":checked?"checked":"unchecked"}var react_checkbox_dist_Root=Checkbox,Indicator=CheckboxIndicator;const mergeClasses=(...classes)=>classes.filter(((className,index,array)=>Boolean(className)&&""!==className.trim()&&array.indexOf(className)===index)).join(" ").trim();var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const Icon=(0,react.forwardRef)((({color="currentColor",size=24,strokeWidth=2,absoluteStrokeWidth,className="",children,iconNode,...rest},ref)=>(0,react.createElement)("svg",{ref,...defaultAttributes,width:size,height:size,stroke:color,strokeWidth:absoluteStrokeWidth?24*Number(strokeWidth)/Number(size):strokeWidth,className:mergeClasses("lucide",className),...rest},[...iconNode.map((([tag,attrs])=>(0,react.createElement)(tag,attrs))),...Array.isArray(children)?children:[children]]))),Check=((iconName,iconNode)=>{const Component=(0,react.forwardRef)((({className,...props},ref)=>{return(0,react.createElement)(Icon,{ref,iconNode,className:mergeClasses(`lucide-${string=iconName,string.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,className),...props});var string}));return Component.displayName=`${iconName}`,Component})("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]);var utils=__webpack_require__("../shadcn-ui/src/lib/utils.ts");function checkbox_Checkbox({className,...props}){return(0,jsx_runtime.jsx)(react_checkbox_dist_Root,{"data-slot":"checkbox",className:(0,utils.cn)("peer border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50",className),...props,children:(0,jsx_runtime.jsx)(Indicator,{"data-slot":"checkbox-indicator",className:"flex items-center justify-center text-current transition-none",children:(0,jsx_runtime.jsx)(Check,{className:"size-3.5"})})})}checkbox_Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox"};var Label=react.forwardRef(((props,forwardedRef)=>(0,jsx_runtime.jsx)(Primitive.label,{...props,ref:forwardedRef,onMouseDown:event=>{event.target.closest("button, input, select, textarea")||(props.onMouseDown?.(event),!event.defaultPrevented&&event.detail>1&&event.preventDefault())}})));Label.displayName="Label";var react_label_dist_Root=Label;function label_Label({className,...props}){return(0,jsx_runtime.jsx)(react_label_dist_Root,{"data-slot":"label",className:(0,utils.cn)("flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",className),...props})}function Check_Check({label,containerClassName,labelClassName,className,...props}){return(0,jsx_runtime.jsxs)(label_Label,{className:(0,utils.cn)("inline-flex items-center gap-2",containerClassName),"data-component":"Check",children:[(0,jsx_runtime.jsx)(checkbox_Checkbox,{className:(0,utils.cn)("size-5",className),...props}),(0,jsx_runtime.jsx)("span",{className:labelClassName,children:label})]})}label_Label.__docgenInfo={description:"",methods:[],displayName:"Label"},Check_Check.__docgenInfo={description:"체크 atom 컴포넌트 반환 메서드\n\n@param {CheckProps} param0: CheckProps\n\n@returns {React.JSX.Element} JSX",methods:[],displayName:"Check",props:{label:{required:!0,tsType:{name:"string"},description:"라벨"},containerClassName:{required:!1,tsType:{name:"string"},description:"컨테이너 클래스"},labelClassName:{required:!1,tsType:{name:"string"},description:"라벨 클래스"}},composes:["ComponentProps"]};const atom_Check=Check_Check;const Check_stories={parameters:{storySource:{source:"/**\n * 체크 atom 컴포넌트 Storybook\n *\n * @author KMS\n * @since 2025.03.11 Tue 23:12:50\n */ import { getArgType, getParameters, SubCategory } from '@a-esports/util/storybook';\nimport Check from './index.ts';\nconst componentName = 'Check';\nconst meta = {\n    argTypes: {\n        checked: {\n            control: 'boolean',\n            description: '체크 여부 (상태 핸들링 필요)',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.PROP\n            }\n        },\n        className: getArgType('className', componentName),\n        containerClassName: {\n            control: 'text',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.PROP\n            }\n        },\n        defaultChecked: {\n            control: 'boolean',\n            description: '기본 체크 여부',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.PROP\n            }\n        },\n        disabled: {\n            control: 'boolean',\n            description: '비활성화 여부',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.PROP\n            }\n        },\n        id: getArgType('id', componentName),\n        label: {\n            control: 'text',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.PROP\n            }\n        },\n        labelClassName: {\n            control: 'text',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.PROP\n            }\n        },\n        onChange: {\n            description: '값 변경 이벤트',\n            table: {\n                category: componentName,\n                subcategory: SubCategory.EV,\n                type: {\n                    detail: '(e: FormEvent<HTMLButtonElement>) => void',\n                    summary: 'FormEventHandler<HTMLButtonElement>'\n                }\n            }\n        }\n    },\n    component: Check,\n    parameters: getParameters('체크박스 컴포넌트', [\n        '기본적인 체크박스 컴포넌트를 확장한 컴포넌트입니다.',\n        '상태 관리 및 사용자 상호작용을 위한 다양한 옵션을 제공합니다.'\n    ]),\n    tags: [\n        'autodocs'\n    ],\n    title: 'atom/Check'\n};\nexport default meta;\nexport const Playground = {\n    args: {\n        label: 'checkbox'\n    }\n};\n",locationsMap:{playground:{startLoc:{col:26,line:81},endLoc:{col:1,line:85},startBody:{col:26,line:81},endBody:{col:1,line:85}}}}},argTypes:{checked:{control:"boolean",description:"체크 여부 (상태 핸들링 필요)",table:{category:"Check",subcategory:storybook.dG.PROP}},className:(0,storybook.HX)("className","Check"),containerClassName:{control:"text",table:{category:"Check",subcategory:storybook.dG.PROP}},defaultChecked:{control:"boolean",description:"기본 체크 여부",table:{category:"Check",subcategory:storybook.dG.PROP}},disabled:{control:"boolean",description:"비활성화 여부",table:{category:"Check",subcategory:storybook.dG.PROP}},id:(0,storybook.HX)("id","Check"),label:{control:"text",table:{category:"Check",subcategory:storybook.dG.PROP}},labelClassName:{control:"text",table:{category:"Check",subcategory:storybook.dG.PROP}},onChange:{description:"값 변경 이벤트",table:{category:"Check",subcategory:storybook.dG.EV,type:{detail:"(e: FormEvent<HTMLButtonElement>) => void",summary:"FormEventHandler<HTMLButtonElement>"}}}},component:atom_Check,parameters:(0,storybook.bQ)("체크박스 컴포넌트",["기본적인 체크박스 컴포넌트를 확장한 컴포넌트입니다.","상태 관리 및 사용자 상호작용을 위한 다양한 옵션을 제공합니다."]),tags:["autodocs"],title:"atom/Check"},Playground={args:{label:"checkbox"}},__namedExportsOrder=["Playground"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'checkbox'\n  }\n}",...Playground.parameters?.docs?.source}}}}}]);